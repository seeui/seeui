{"version":3,"sources":["tabs/Tabs.js"],"names":["Tabs","props","selectedIndex","state","hasAnimate","onTabClick","bind","onMouseOver","onMouseLeave","componentDidMount","doStick","componentWillReceiveProps","setState","componentDidUpdate","setTimeout","isFirst","sel","prefixCls","el","main","stickBorder","target","clientWidth","offsetLeft","type","line","e","index","onChange","hoverAnimate","render","className","children","tabs","map","tab","selected","key","onClick","cls","inkBarCls","node","nav","defaultProps","Tab"],"mappings":"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","file":"Tabs.js","sourcesContent":["/**\n * @file Tabs\n * @author huangjing\n * @date 2017-07-13\n */\n\nimport {h, Component, cloneElement} from 'preact';\nimport classNames from '../util/classnames';\nimport {setStyle, query, closest} from '../util/dom';\n\nimport Tab from './Tab';\n\n\nexport default class Tabs extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        const selectedIndex = props.selectedIndex;\n\n        /**\n         * 状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state = {\n            selectedIndex,\n            hasAnimate: false\n        };\n\n        this.onTabClick = this.onTabClick.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n    }\n\n    static defaultProps = {\n        prefixCls: 'cui',\n        selectedIndex: 0,\n        // 类型，目前的值为 blockline 和 txtline， 默认为blockLine\n        type: 'blockline',\n        // 切换tab时底边是否有滑动动画\n        hasAnimate: true,\n        // 鼠标在tab上移动时 是否有跟随效果\n        hoverAnimate: false,\n        onChange() {}\n    };\n\n    static Tab = Tab;\n\n    componentDidMount() {\n\n        // 更新底边的状态\n        this.doStick(true);\n    }\n\n    componentWillReceiveProps({selectedIndex}) {\n\n        if (selectedIndex !== this.state.selectedIndex) {\n            this.setState({\n                selectedIndex\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        // 更新底边的状态,\n        // 因为子组件Tab的渲染顺序在父组件之后，所以需要等待他们ready后再执行位置的更新\n        setTimeout(() => {\n            // 全屏类型的不需要滚动\n            this.doStick();\n        }, 0);\n    }\n\n    doStick(isFirst) {\n        const sel = `.${this.props.prefixCls}-tabs-tab-active`;\n        let el = query(sel, this.main);\n        this.stickBorder(el, isFirst);\n    }\n\n    stickBorder(target, isFirst) {\n        if (!target) {\n            return;\n        }\n\n        let {clientWidth, offsetLeft} = target;\n\n        if (this.props.type === 'txtline') {\n            let el = query(`.${this.props.prefixCls}-tabs-tab-txt`, target);\n            clientWidth = el.clientWidth;\n            offsetLeft += (target.clientWidth - clientWidth) / 2 || 0;\n        }\n\n        setStyle(this.line, 'display', 'block');\n        setStyle(this.line, 'width', clientWidth + 'px');\n        setStyle(this.line, 'left', `${offsetLeft}px`);\n\n        // 在第一次渲染后才加上底边滑动动效类，不然一开始滑到相应tab下会不好看\n        if (isFirst) {\n            this.setState({\n                hasAnimate: this.props.hasAnimate\n            });\n        }\n    }\n\n    onTabClick(e, index) {\n\n        if (index === this.state.selectedIndex) {\n            return;\n        }\n\n        let onChange = this.props.onChange;\n\n        this.setState({selectedIndex: index}, () => {\n            onChange && onChange({\n                type: 'change',\n                selectedIndex: index,\n                target: this\n            });\n        });\n    }\n\n    onMouseOver(e) {\n        if (!this.props.hoverAnimate) {\n            return;\n        }\n\n        let el = closest(e.target, `.${this.props.prefixCls}-tabs-tab`, this.main);\n        if (el) {\n            this.stickBorder(el);\n        }\n\n    }\n\n    onMouseLeave(e) {\n        if (!this.props.hoverAnimate) {\n            return;\n        }\n        let el = closest(e.target, `.${this.props.prefixCls}-tabs-tab`, this.main);\n        if (el) {\n            this.doStick();\n        }\n    }\n\n    render({prefixCls, className, children, type}) {\n\n        let selectedIndex = this.state.selectedIndex;\n\n        let tabs = children.map((tab, index) => {\n\n            let selected = selectedIndex === index;\n\n            return cloneElement(\n                tab,\n                {\n                    key: index,\n                    selected: selected,\n                    index: index,\n                    onClick: this.onTabClick,\n                    onMouseOver: this.onMouseOver,\n                    onMouseLeave: this.onMouseLeave\n                }\n            );\n        });\n\n        const cls = classNames({\n            [`${prefixCls}-tabs`]: true,\n            [`${prefixCls}-tabs-blockline`]: type === 'blockline',\n            [`${prefixCls}-tabs-txtline`]: type === 'txtline',\n            [className]: className\n        });\n\n        const inkBarCls = classNames({\n            [`${prefixCls}-tabs-ink-bar`]: true,\n            [`${prefixCls}-tabs-ink-bar-animated`]: this.state.hasAnimate\n        });\n\n        return (\n            <div className={cls} ref={node => this.main = node}>\n                <div className={`${prefixCls}-tabs-bar`}>\n                    <div className={`${prefixCls}-tabs-nav-container`}>\n                        <div className={`${prefixCls}-tabs-nav-wrap`}>\n                            <div className={`${prefixCls}-tabs-nav-scroll`}>\n                                <div className={`${prefixCls}-tabs-nav`} ref={node => this.nav = node}>\n                                    <div\n                                        className={inkBarCls}\n                                        ref={node => this.line = node}\n                                    ></div>\n                                    {tabs}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n"]}