{"version":3,"names":[],"mappings":"","sources":["input/Input.js"],"sourcesContent":["/**\n * @file Input\n * @author cgzero(cgzero@cgzero.com)\n * @data 2017-07-06\n */\n\nimport {h, Component} from 'preact';\nimport classNames from '../util/classnames';\n\n\nexport default class Input extends Component {\n\n    static defaultProps = {\n        prefixCls: 'cui',\n        type: 'text'\n    };\n\n    handleChange(e) {\n        if (this.props.onChange) {\n            this.props.onChange(e);\n        }\n    }\n\n    handleKeyDown(e) {\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(e);\n        }\n    }\n\n    render() {\n        const {prefixCls, type, className, ...others} = this.props;\n\n        const cls = classNames({\n            [`${prefixCls}-input`]: true,\n            [className]: className\n        });\n\n        switch (type) {\n            case 'textarea':\n                return (\n                    <textarea\n                        className={cls}\n                        {...others}\n                    />\n                );\n            default:\n                return (\n                    <input\n                        className={cls}\n                        {...others}\n                    />\n                );\n        }\n    }\n}\n"],"file":"Input.js"}