{"version":3,"sources":["dialog/Toast.js"],"names":["Toast","props","state","remain","show","countDown","self","counter","setInterval","clearInterval","setState","onToastShow","onShow","onToastHide","onHide","componentWillReceiveProps","nextProps","render","msg","children","title","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;;QAUqBA,K;;;AAEjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,qEACf,sBAAMA,KAAN,CADe;;AAGf,kBAAKC,KAAL,GAAa;AACTC,wBAAQF,MAAME,MADL;AAETC,sBAAM;AAFG,aAAb;AAHe;AAOlB;;wBAEDC,S,wBAAY;AACR,gBAAIC,OAAO,IAAX;;AAEA,gBAAIC,UAAUC,YAAY,YAAY;AAClC,oBAAIF,KAAKJ,KAAL,CAAWC,MAAX,KAAsB,CAA1B,EAA6B;AACzBM,kCAAcF,OAAd;;AAEAD,yBAAKI,QAAL,CAAc,EAACN,MAAM,KAAP,EAAcD,QAAQG,KAAKL,KAAL,CAAWE,MAAX,GAAoB,CAA1C,EAAd;AACH;;AAEDG,qBAAKI,QAAL,CAAc,EAACP,QAAQ,EAAEG,KAAKJ,KAAL,CAAWC,MAAtB,EAAd;AACH,aARa,EAQX,IARW,CAAd;AASH,S;;wBAEDQ,W,0BAAc;AACV,iBAAKN,SAAL;;AAEA,iBAAKJ,KAAL,CAAWW,MAAX,IAAqB,KAAKX,KAAL,CAAWW,MAAX,EAArB;AACH,S;;wBAEDC,W,0BAAc;AACV,iBAAKZ,KAAL,CAAWa,MAAX,IAAqB,KAAKb,KAAL,CAAWa,MAAX,EAArB;AACH,S;;wBAEDC,yB,sCAA0BC,S,EAAW;AAAA,gBAC1Bb,MAD0B,GACVa,SADU,CAC1Bb,MAD0B;AAAA,gBAClBC,IADkB,GACVY,SADU,CAClBZ,IADkB;;;AAGjC,iBAAKM,QAAL,CAAc;AACVP,wBAAQA,UAAU,KAAKD,KAAL,CAAWC,MADnB;AAEVC,sBAAMA;AAFI,aAAd;AAIH,S;;wBAEDa,M,qBAAS;AAAA,yBAC0B,KAAKhB,KAD/B;AAAA,gBACEiB,GADF,UACEA,GADF;AAAA,gBACOC,QADP,UACOA,QADP;AAAA,gBACiBC,KADjB,UACiBA,KADjB;;;AAGL,mBACI;AAAA;AAAA;AACI,2BAAOA,KADX;AAEI,8BAAU,KAFd;AAGI,0BAAM,KAAKlB,KAAL,CAAWE,IAHrB;AAII,4BAAQ,KAAKO,WAAL,CAAiBU,IAAjB,CAAsB,IAAtB,CAJZ;AAKI,4BAAQ,KAAKR,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB;AALZ;AAOKF,wBAPL;AAQI;AAAA;AAAA,sBAAK,WAAU,uBAAf;AAAwC,yBAAKjB,KAAL,CAAWC,MAAnD;AAAA;AAAA;AARJ,aADJ;AAYH,S;;;;;sBA3DgBH,K","file":"Toast.js","sourcesContent":["/**\n * @file Toast\n * @author zhaiwanli\n * @time 17/7/15\n */\n\nimport {h, Component} from 'preact';\nimport classNames from '../util/classnames';\nimport Dialog from './Dialog';\n\nexport default class Toast extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            remain: props.remain,\n            show: false\n        };\n    }\n\n    countDown() {\n        let self = this;\n\n        let counter = setInterval(function () {\n            if (self.state.remain === 1) {\n                clearInterval(counter);\n\n                self.setState({show: false, remain: self.props.remain + 1});\n            }\n\n            self.setState({remain: --self.state.remain});\n        }, 1000);\n    }\n\n    onToastShow() {\n        this.countDown();\n\n        this.props.onShow && this.props.onShow();\n    }\n\n    onToastHide() {\n        this.props.onHide && this.props.onHide();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {remain, show} = nextProps;\n\n        this.setState({\n            remain: remain || this.state.remain,\n            show: show\n        });\n    }\n\n    render() {\n        const {msg, children, title} = this.props;\n\n        return (\n            <Dialog\n                title={title}\n                hasClose={false}\n                show={this.state.show}\n                onShow={this.onToastShow.bind(this)}\n                onHide={this.onToastHide.bind(this)}\n            >\n                {children}\n                <div className=\"cui-dialog-count-down\">{this.state.remain}s</div>\n            </Dialog>\n        );\n    }\n}\n"]}