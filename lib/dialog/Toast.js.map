{"version":3,"names":[],"mappings":"","sources":["dialog/Toast.js"],"sourcesContent":["/**\n * @file Toast\n * @author zhaiwanli\n * @time 17/7/15\n */\n\nimport {h, Component} from 'preact';\nimport classNames from '../util/classnames';\nimport Dialog from './Dialog';\n\nexport default class Toast extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            remain: props.remain,\n            show: false\n        };\n    }\n\n    countDown() {\n        let self = this;\n\n        let counter = setInterval(function () {\n            if (self.state.remain === 1) {\n                clearInterval(counter);\n\n                self.setState({show: false, remain: self.props.remain + 1});\n            }\n\n            self.setState({remain: --self.state.remain});\n        }, 1000);\n    }\n\n    onToastShow() {\n        this.countDown();\n\n        this.props.onShow && this.props.onShow();\n    }\n\n    onToastHide() {\n        this.props.onHide && this.props.onHide();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {remain, show} = nextProps;\n\n        this.setState({\n            remain: remain || this.state.remain,\n            show: show\n        });\n    }\n\n    render() {\n        const {msg, children, title} = this.props;\n\n        return (\n            <Dialog\n                title={title}\n                hasClose={false}\n                show={this.state.show}\n                onShow={this.onToastShow.bind(this)}\n                onHide={this.onToastHide.bind(this)}\n            >\n                {children}\n                <div className=\"cui-dialog-count-down\">{this.state.remain}s</div>\n            </Dialog>\n        );\n    }\n}\n"],"file":"Toast.js"}