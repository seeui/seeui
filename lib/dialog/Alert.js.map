{"version":3,"names":[],"mappings":"","sources":["dialog/Alert.js"],"sourcesContent":["/**\n * @file Alert\n * @author zhaiwanli\n * @time 17/7/15\n */\n\nimport {h, Component} from 'preact';\nimport classNames from '../util/classnames';\n\nimport Dialog from './Dialog';\n\nexport default class Alert extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false\n        };\n    }\n\n    onAlertShow() {\n        this.props.onShow && this.props.onShow();\n    }\n\n    onAlertHide(data) {\n        if (data && (data.type === 'closeClick' || data.type === 'maskClick')) {\n            this.props.onHide && this.props.onHide();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {remain, show} = nextProps;\n\n        this.setState({\n            show: show\n        });\n    }\n\n    render() {\n        const {msg, children, title, onHide, onConfirm} = this.props;\n\n        let dialogButtons = [{\n            type: 'primary',\n            value: '确定',\n            size: 'large',\n            onClick: () => {\n                this.props.onHide && this.props.onHide();\n                this.props.onConfirm && this.props.onConfirm();\n            }\n        }];\n\n        return (\n            <Dialog\n                title={title}\n                hasClose={true}\n                show={this.state.show}\n                buttons={dialogButtons}\n                onShow={this.onAlertShow.bind(this)}\n                onHide={this.onAlertHide.bind(this)}\n                maskClickClose={true}\n            >\n                {children}\n            </Dialog>\n        );\n    }\n}\n"],"file":"Alert.js"}