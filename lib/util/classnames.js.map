{"version":3,"names":[],"mappings":"","sources":["util/classnames.js"],"sourcesContent":["/**\n * @file classnames\n * https://github.com/JedWatson/classnames\n * @author cgzero(cgzero@cgzero.com)\n * @time 2017-08-09\n */\n\nlet hasOwn = {}.hasOwnProperty;\n\nexport default function classnames(...args) {\n    let classes = [];\n\n    for (let i = 0; i < args.length; i++) {\n        let arg = args[i];\n        if (!arg) {\n            continue;\n        }\n\n        let argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (arg instanceof Array && arg.length) {\n            let inner = classnames.apply(null, arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            /* eslint-disable */\n            for (let key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n            /* eslint-enable */\n        }\n    }\n\n    return classes.join(' ');\n}\n"],"file":"classnames.js"}